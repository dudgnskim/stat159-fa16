#  birthCountry birthYear
#1         D.R.      1985
#2    Venezuela      1974
#3         Cuba      1987
#4         D.R.      1985
#5         D.R.      1984
#6         D.R.      1977
players = debutDF$playerID[ which(debutAge == 16 |
debutAge== 42)]
players
playersQ = paste("'", players, "'", sep = "")
playersComma = paste(playersQ, collapse = ", ")
playersComma
query = paste("SELECT * FROM Master WHERE playerID IN (",
playersComma, ");", paste = "")
query
youngOld = dbGetQuery(con, query)
require(sqldf)
library(sqldf)
require(sqldf)
library(sqldf)
dte = seq(as.Date("2011-05-01"), as.Date("2011-05-20"), by=1)
persid = c(1013,1011,1014,1015,1023,1028,1012,1018,1019,1020,1027,
1016,1022,1017,1021,1024,1030,1025,1026,1029)
v1 = round(rnorm(20), 2)
v2 = round(rnorm(20), 2)
first=c("David","Sara","Jon","Jennifer","Ken","Ralph","Chris","David",
"David","Joe","Melanie","Debbie","Jessica","Ally","Amy","Ralph",
"Sara","Jane","John","Lance")
last=c("Smith","Jones","Alberts","Hudson","Jennings","Masterson","Browm",
"Felt","Spade","Montana","Keith","Hardson","Karson","Roberts","Smith",
"Jennings","Denver","Hudson","Reynolds","Darder")
stat = c("CA","IA","NC","FL","GA","OH","NY","CA","TX","TX","CA","CA","AZ",
"CO","OK","MI","WI","SC","VT","IL")
df1 <- data.frame(id=c(seq(1,20)), date=c(dte), var1=c(v1),
var2=c(v2), personid=c(persid))
df2 <- data.frame(id=c(sort(persid)), firstname=c(first),
lastname=c(last), state=c(stat))
df1
df2
sqldf("SELECT COUNT(*) FROM df2 WHERE state = 'CA'")
library(sqldf)
dte = seq(as.Date("2011-05-01"), as.Date("2011-05-20"), by=1)
persid = c(1013,1011,1014,1015,1023,1028,1012,1018,1019,1020,1027,
1016,1022,1017,1021,1024,1030,1025,1026,1029)
v1 = round(rnorm(20), 2)
v2 = round(rnorm(20), 2)
first=c("David","Sara","Jon","Jennifer","Ken","Ralph","Chris","David",
"David","Joe","Melanie","Debbie","Jessica","Ally","Amy","Ralph",
"Sara","Jane","John","Lance")
last=c("Smith","Jones","Alberts","Hudson","Jennings","Masterson","Browm",
"Felt","Spade","Montana","Keith","Hardson","Karson","Roberts","Smith",
"Jennings","Denver","Hudson","Reynolds","Darder")
stat = c("CA","IA","NC","FL","GA","OH","NY","CA","TX","TX","CA","CA","AZ",
"CO","OK","MI","WI","SC","VT","IL")
df1 <- data.frame(id=c(seq(1,20)), date=c(dte), var1=c(v1),
var2=c(v2), personid=c(persid))
df2 <- data.frame(id=c(sort(persid)), firstname=c(first),
lastname=c(last), state=c(stat))
sqldf("SELECT COUNT(*) FROM df2 WHERE state = 'CA'")
sqldf("SELECT df2.firstname, df2.lastname, df1.var1, df2.state FROM df1
INNER JOIN df2 ON df1.personid = df2.id WHERE df2.state = 'TX'")
sqldf("SELECT df2.state, COUNT(df1.var1) FROM df1
INNER JOIN df2 ON df1.personid = df2.id WHERE df1.var1 > 0
GROUP BY df2.state")
detach("package:sqldf", unload=TRUE)
library("sqldf", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(sqldf)
dte = seq(as.Date("2011-05-01"), as.Date("2011-05-20"), by=1)
persid = c(1013,1011,1014,1015,1023,1028,1012,1018,1019,1020,1027,
1016,1022,1017,1021,1024,1030,1025,1026,1029)
v1 = round(rnorm(20), 2)
v2 = round(rnorm(20), 2)
first=c("David","Sara","Jon","Jennifer","Ken","Ralph","Chris","David",
"David","Joe","Melanie","Debbie","Jessica","Ally","Amy","Ralph",
"Sara","Jane","John","Lance")
last=c("Smith","Jones","Alberts","Hudson","Jennings","Masterson","Browm",
"Felt","Spade","Montana","Keith","Hardson","Karson","Roberts","Smith",
"Jennings","Denver","Hudson","Reynolds","Darder")
stat = c("CA","IA","NC","FL","GA","OH","NY","CA","TX","TX","CA","CA","AZ",
"CO","OK","MI","WI","SC","VT","IL")
df1 <- data.frame(id=c(seq(1,20)), date=c(dte), var1=c(v1),
var2=c(v2), personid=c(persid))
df2 <- data.frame(id=c(sort(persid)), firstname=c(first),
lastname=c(last), state=c(stat))
sqldf("SELECT COUNT(*) FROM df2 WHERE state = 'CA'")
# Use the titanic data set
data(titanic3, package=”PASWR”)
colnames(titanic3)
head(titanic3)
install.packages('tcltk')
?sqldf
dbConnect(dbDriver("MySQL"), user="mysqluser", password="mypassword", dbname="mydb", host="127.0.0.1", port=3307)
src_mysql(
dbname = "mydb", user = "mysqluser", password = "mypassword",
host = "127.0.0.1", port=3307)
install.packages('tcltk2')
library(tcltk)
library(tcltk2)
install.packages('XQuartz')
options(sqldf.driver = "SQLite") # as per FAQ #7 force SQLite
options(gsubfn.engine = "R") # as per FAQ #5 use R code rather than tcltk
library(RMySQL)
library(sqldf)
dte = seq(as.Date("2011-05-01"), as.Date("2011-05-20"), by=1)
persid = c(1013,1011,1014,1015,1023,1028,1012,1018,1019,1020,1027,
1016,1022,1017,1021,1024,1030,1025,1026,1029)
v1 = round(rnorm(20), 2)
v2 = round(rnorm(20), 2)
first=c("David","Sara","Jon","Jennifer","Ken","Ralph","Chris","David",
"David","Joe","Melanie","Debbie","Jessica","Ally","Amy","Ralph",
"Sara","Jane","John","Lance")
last=c("Smith","Jones","Alberts","Hudson","Jennings","Masterson","Browm",
"Felt","Spade","Montana","Keith","Hardson","Karson","Roberts","Smith",
"Jennings","Denver","Hudson","Reynolds","Darder")
stat = c("CA","IA","NC","FL","GA","OH","NY","CA","TX","TX","CA","CA","AZ",
"CO","OK","MI","WI","SC","VT","IL")
df1 <- data.frame(id=c(seq(1,20)), date=c(dte), var1=c(v1),
var2=c(v2), personid=c(persid))
df2 <- data.frame(id=c(sort(persid)), firstname=c(first),
lastname=c(last), state=c(stat))
sqldf("SELECT COUNT(*) FROM df2 WHERE state = 'CA'", )
sqldf("SELECT df2.firstname, df2.lastname, df1.var1, df2.state FROM df1
INNER JOIN df2 ON df1.personid = df2.id WHERE df2.state = 'TX'")
sqldf("SELECT df2.state, COUNT(df1.var1) FROM df1
INNER JOIN df2 ON df1.personid = df2.id WHERE df1.var1 > 0
GROUP BY df2.state")
sqldf("SELECT df2.firstname, df2.lastname, df1.var1, df2.state FROM df1
INNER JOIN df2 ON df1.personid = df2.id
WHERE df1.date BETWEEN '2011-05-03' AND '2011-05-11'")
df1
df2
options(sqldf.driver = "SQLite") # as per FAQ #7 force SQLite
options(gsubfn.engine = "R") # as per FAQ #5 use R code rather than tcltk
library(RMySQL)
library(sqldf)
#Assumptions
#1. Table is provided
#2. The 'year' column only consists of 2014 and 2015
#3. There are pairs of Provider IDs on the 'Provider ID' column because there should exist data point for each year.
prev <- #table
d
?as.data.frame
df1
df1 <- as.data.frame(df1, colnames=c('a','b','c','d','e'))
df1
?colnames
sqldf('select id={1,2,3,4} from df2')
sqldf('select id from df2 where id = {1,2,3,4}')
sqldf('select id from df2 where id = (1,2,3,4)')
sqldf('select id from df2 where id = c(1,2,3,4)')
sqldf('select id from df2 where id = [1,2,3,4]')
sqldf("SELECT COUNT(*) FROM df2 WHERE state = 'CA'", )
sqldf("SELECT COUNT(*) FROM df2 WHERE state = 'CA'", )[1,1]
sqldf("SELECT df2.firstname, df2.lastname, df1.var1, df2.state FROM df1
INNER JOIN df2 ON df1.personid = df2.id WHERE df2.state = 'TX'")
sqldf("SELECT df2.firstname, df2.lastname, df1.var1, df2.state FROM df1
INNER JOIN df2 ON df1.personid = df2.id WHERE df2.state = 'TX'")$firstname
n.df<-data.frame(id=sqldf(select id from df2)))
n.df<-data.frame(id=sqldf(select id from df2)$id))
sqldf(select id from df2)
n.df<-data.frame(id=sqldf('select id from df2')))
n.df<-data.frame(id=sqldf('select id from df2'))
n.df
n.df<-data.frame(id=sqldf('select id from df2 where id=1030'))
n.df
n.df<-data.frame(id=sqldf('select id from df2'))
df1
var_ration <- sqldf('select var1 from df1') / sqldf('select var2 from df1')
var_ration
?range
install.packages("ILSR")
install.packages("ISLR")
require("Auto")
require(ISLR)
auto <- data(Auto)
attach(Auto)
auto
Auto
Auto <- na.omit(Auto)
head(Auto)
class(Auto$year)
summary(Auto$year)
cs <- data("Carseats")
cs
attach(Carseats)
cs <- Carseats
cs
head(cs)
cs.lm.fit <- lm(Sales ~ Price, Urban, US)
cs.lm.fit
cs.lm.fit <- lm(Sales ~ Price+Urban+US)
cs.lm.fit <- lm(Sales ~ Price+Urban+US, data=cs)
cs.lm.fit
summary(cs.lm.fit)
cs.glm <- glm(Sales ~ Urban+US, data=cs, family=binary)
cs.glm <- glm(Sales ~ Urban+US, data=cs, family=Binary)
?glm
cs.glm <- glm.fit(Sales ~ Urban+US, data=cs, family=binary())
cs.glm <- glm(Sales ~ Urban+US, data=cs, family = binary)
cs.glm <- glm(Sales ~ Urban+US, data=cs, family = binomial)
summary(cs$Urban)
summary(cs$US)
cs.glm <- glm(Sales ~ Urban, data=cs, family = binomial)
glm(Sales ~ Price+Urban+US, data=cs)
?confint
### Import Advertising.csv data to create eda-output.txt, histograms
#Import Advertising.csv
setwd("~/coding/stat159/stat159-fa16/stat159-fall2016-hw02")
ad <- read.csv('data/Advertising.csv', header=TRUE)
tv <- ad$TV
sales <- ad$Sales
tv
summary(tv)
summary(tv)[2]
### Import Advertising.csv data to create eda-output.txt, histograms
#Import Advertising.csv
setwd("~/coding/stat159/stat159-fa16/stat159-fall2016-hw02")
ad <- read.csv('data/Advertising.csv', header=TRUE)
tv <- ad$TV
sales <- ad$Sales
sink("data/eda-output.txt")
cat("Summary statistics of tv: \n")
cat(summary(tv), "\n")
cat("Minimum: ", summary(tv)[1], "\n", append=TRUE)
cat("1st Qu.: ", summary(tv)[2], "\n", append=TRUE)
cat("Median: ", summary(tv)[3], "\n", append=TRUE)
cat("Mean: ", summary(tv)[4], "\n", append=TRUE)
cat("3rd Qu.: ", summary(tv)[5], "\n", append=TRUE)
cat("Maximum: ", summary(tv)[6], "\n", append=TRUE)
cat("Summary statistics of sales: \n")
cat("Minimum: ", summary(sales)[1], "\n", append=TRUE)
cat("1st Qu.: ", summary(sales)[2], "\n", append=TRUE)
cat("Median: ", summary(sales)[3], "\n", append=TRUE)
cat("Mean: ", summary(sales)[4], "\n", append=TRUE)
cat("3rd Qu.: ", summary(sales)[5], "\n", append=TRUE)
cat("Maximum: ", summary(sales)[6], "\n", append=TRUE)
sink()
#Generate histogram of tv
png("images/histogram-tv.png")
hist(tv)
dev.off()
#Generate histogram of sales
png("images/histogram-sales.png")
hist(sales)
dev.off()
source('~/coding/stat159/stat159-fa16/stat159-fall2016-hw02/code/eda-script.R')
#Generate histogram of tv
### Import Advertising.csv data to create eda-output.txt, histograms
#Import Advertising.csv
setwd("~/coding/stat159/stat159-fa16/stat159-fall2016-hw02")
ad <- read.csv('data/Advertising.csv', header=TRUE)
tv <- ad$TV
sales <- ad$Sales
sink("data/eda-output.txt")
cat("Summary statistics of tv: \n")
cat("Minimum: ", summary(tv)[1], "\n", append=TRUE)
cat("1st Qu.: ", summary(tv)[2], "\n", append=TRUE)
cat("Median: ", summary(tv)[3], "\n", append=TRUE)
cat("Mean: ", summary(tv)[4], "\n", append=TRUE)
cat("3rd Qu.: ", summary(tv)[5], "\n", append=TRUE)
cat("Maximum: ", summary(tv)[6], "\n\n", append=TRUE)
cat("Summary statistics of sales: \n")
cat("Minimum: ", summary(sales)[1], "\n", append=TRUE)
cat("1st Qu.: ", summary(sales)[2], "\n", append=TRUE)
cat("Median: ", summary(sales)[3], "\n", append=TRUE)
cat("Mean: ", summary(sales)[4], "\n", append=TRUE)
cat("3rd Qu.: ", summary(sales)[5], "\n", append=TRUE)
cat("Maximum: ", summary(sales)[6], "\n", append=TRUE)
sink()
#Generate histogram of tv
png("images/histogram-tv.png")
hist(tv)
dev.off()
#Generate histogram of sales
png("images/histogram-sales.png")
hist(sales)
dev.off()
plot(tv, sales, pch=19, cex=17)
plot(tv, sales, pch=1, cex=17)
plot(tv, sales, pch=1, cex=3)
plot(tv, sales, pch=1, cex=2)
plot(tv, sales, pch=1, cex=1)
plot(tv, sales, pch=19, cex=1)
plot(tv, sales, pch=15, cex=1)
plot(tv, sales, pch=12, cex=1)
plot(tv, sales, pch=10, cex=1)
plot(tv, sales, pch=8, cex=1)
plot(tv, sales, pch=9, cex=1)
plot(tv, sales, pch=3, cex=1)
plot(tv, sales, pch=2, cex=1)
plot(tv, sales, pch=1, cex=1)
plot(tv, sales, pch=19, cex=1)
plot(tv, sales, pch=19, cex=1, col='tomato')
line(reg)
reg <- lm(sales ~ tv)
reg_sum <- summary(reg)
save(reg_sum,file='regression.RData')
line(reg)
reg
reg$coefficients
reg$coefficients[1]
reg$coefficients[2]
line(reg$coefficients[2] * sales + reg$coefficients[1])
?line
abline(reg)
reg_sum
?pdf
lm(sales ~ ., ad)
w_reg <- lm(sales ~ ., ad)
summary(w_reg)
### Import Advertising.csv and generate regression.RData, scatterplot-tv-sales.png
setwd("~/coding/stat159/stat159-fa16/stat159-fall2016-hw02")
ad <- read.csv('data/Advertising.csv', header=TRUE)
tv <- ad$TV
sales<- ad$sales
# Save regression.RData
reg <- lm(sales ~ tv)
reg_sum <- summary(reg)
save(reg_sum,file='data/regression.RData')
#Generate scatterplot-tv-sales
png('images/scatterplot-tv-sales.png')
plot(tv, sales, pch=19, cex=1, col='tomato')
abline(reg)
dev.off()
pdf('images/scatterplot-tv-sales.pdf')
plot(tv, sales, pch=19, cex=1, col='tomato')
abline(reg)
dev.off()
sales
### Import Advertising.csv and generate regression.RData, scatterplot-tv-sales.png
setwd("~/coding/stat159/stat159-fa16/stat159-fall2016-hw02")
ad <- read.csv('data/Advertising.csv', header=TRUE)
tv <- ad$TV
sales<- ad$Sales
# Save regression.RData
reg <- lm(sales ~ tv)
reg_sum <- summary(reg)
save(reg_sum,file='data/regression.RData')
#Generate scatterplot-tv-sales
png('images/scatterplot-tv-sales.png')
plot(tv, sales, pch=19, cex=1, col='tomato')
abline(reg)
dev.off()
pdf('images/scatterplot-tv-sales.pdf')
plot(tv, sales, pch=19, cex=1, col='tomato')
abline(reg)
dev.off()
### Import Advertising.csv data to create eda-output.txt, histograms
#Import Advertising.csv
setwd("~/coding/stat159/stat159-fa16/stat159-fall2016-hw02")
ad <- read.csv('data/Advertising.csv', header=TRUE)
tv <- ad$TV
sales <- ad$Sales
sink("data/eda-output.txt")
cat("Summary statistics of tv: \n")
cat("Minimum: ", summary(tv)[1], "\n", append=TRUE)
cat("1st Qu.: ", summary(tv)[2], "\n", append=TRUE)
cat("Median: ", summary(tv)[3], "\n", append=TRUE)
cat("Mean: ", summary(tv)[4], "\n", append=TRUE)
cat("3rd Qu.: ", summary(tv)[5], "\n", append=TRUE)
cat("Maximum: ", summary(tv)[6], "\n\n", append=TRUE)
cat("Summary statistics of sales: \n")
cat("Minimum: ", summary(sales)[1], "\n", append=TRUE)
cat("1st Qu.: ", summary(sales)[2], "\n", append=TRUE)
cat("Median: ", summary(sales)[3], "\n", append=TRUE)
cat("Mean: ", summary(sales)[4], "\n", append=TRUE)
cat("3rd Qu.: ", summary(sales)[5], "\n", append=TRUE)
cat("Maximum: ", summary(sales)[6], "\n", append=TRUE)
sink()
#Generate histogram of tv
png("images/histogram-tv.png")
hist(tv)
dev.off()
pdf("images/histogram-tv.pdf")
hist(tv)
dev.off()
#Generate histogram of sales
png("images/histogram-sales.png")
hist(sales)
dev.off()
pdf("images/histogram-sales.pdf")
hist(sales)
dev.off()
### Import Advertising.csv and generate regression.RData, scatterplot-tv-sales.png
setwd("~/coding/stat159/stat159-fa16/stat159-fall2016-hw02")
ad <- read.csv('data/Advertising.csv', header=TRUE)
tv <- ad$TV
sales<- ad$Sales
# Save regression.RData
reg <- lm(sales ~ tv)
reg_sum <- summary(reg)
save(reg_sum,file='data/regression.RData')
#Generate scatterplot-tv-sales
png('images/scatterplot-tv-sales.png')
plot(tv, sales, pch=19, cex=1, col='tomato', main='Regression Analysis of Sales on TV')
abline(reg)
dev.off()
pdf('images/scatterplot-tv-sales.pdf')
plot(tv, sales, pch=19, cex=1, col='tomato', main='Regression Analysis of Sales on TV')
abline(reg)
dev.off()
setwd('~/coding/stat159/stat159-fa16/stat159-fall2016-hw02/')
reg <- load('/data/regression.RData)
reg <- load('/data/regression.RData')
)
''
reg <- load('/data/regression.RData')
setwd('~/coding/stat159/stat159-fa16/stat159-fall2016-hw02')
reg <- load('/data/regression.RData')
reg <- load('data/regression.RData')
reg
reg_sum
reg <- load('data/regression.RData')
reg
summary(reg)
reg <- lm(sales ~ tv)
reg_sum <- summary(reg)
save(reg_sum, file='data/regression.RData')
reg <- load('data/regression.RData')
reg
REG
reg
reg <- lm(sales ~ tv)
reg
save(reg, file='data/regression.RData')
reg <- load('data/regression.RData')
reg
reg_sum
reg <- lm(sales ~ tv)
reg_sum <- summary(reg)
save(reg, file='data/regression.RData')
reg <- load('data/regression.RData')
reg
reg <- lm(sales ~ tv)
reg_sum <- summary(reg)
save(reg_sum, file='data/regression.RData')
reg <- load('data/regression.RData')
reg
reg_sum
setwd('~/coding/stat159/stat159-fa16/stat159-fall2016-hw02')
reg <- load('data/regression.RData')
reg_sum
load('data/regression.RData')
reg_sum
?table
table(reg_sum$coefficients)
?xtable
install.packages("xtable")
?xtable
require(xtable)
?xtable
load('data/regression.RData')
xtable(reg_sum$coefficients)
a <- xtable(reg_sum$coefficients)
a
a[1]
class(A)
class(a)
class(a)[,1]
class(a)[1,]
class(a)[1]
class(a)[1][1]
class(a)[1][1][1]
class(a)[[1]]
names(reg_sum)
reg_sum$residuals
names(reg_sum)
reg_sum$r.squared
reg_sum
reg_sum$coefficients
?data.frame
rqi <- data.frame('Quantitiy', 'Value)
''
)
''
rqi <- data.frame('Quantitiy', 'Value')
rqi
rqi[2,] <- c('RSS', 3.26)
rqi[2,] <- 'RSS', 3.26
rqi <- data.frame('Quantitiy', 'Value', stringsAsFactors = FALSE)
rqi[2,] <- c('RSS', 3.26)
rqi
rqi <- data.frame(colnames=c('Quantity', 'Value'), stringsAsFactors = FALSE)
rqi
rqi <- data.frame(Quantity=vector(), Value=vector(), stringsAsFactors = FALSE)
rqi
?append
append(rqi, c('RSS', 3.26))
rqi
reg_sum$r.squared
sum((reg_sum$residuals)*(reg_sum$residuals))
length(reg_sum$residuals)
reg_sum
names(reg_sum)
reg_sum$df
reg_sum$aliased
reg_sum$sigma
reg_sum$fstatistic
reg_sum$fstatistic[1]
reg_sum$r.squared
rqi <- data.frame(Quantity=vector(), Value=vector(), stringsAsFactors = FALSE)
rqi[1,] <- c('RSE', reg_sum$sigma)
rqi[2,] <- c('$R^2$', reg_sum$r.squared)
rqi[3,] <- c('F-stat', reg_sum$fstatistic[1])
rqi_tex <- xtable(rqi)
rqi_tex
rqi <- data.frame(Quantity=vector(), Value=vector(), stringsAsFactors = FALSE)
rqi[1,] <- c('RSE', reg_sum$sigma)
rqi[2,] <- c('$R2$', reg_sum$r.squared)
rqi[3,] <- c('F-stat', reg_sum$fstatistic[1])
rqi_tex <- xtable(rqi)
